{"version":3,"sources":["useCarouselController.tsx"],"names":["React","Easing","runOnJS","useSharedValue","withTiming","useCarouselController","opts","size","loop","handlerOffsetX","disable","originalLength","length","onChange","duration","index","sharedIndex","useRef","sharedPreIndex","convertToSharedIndex","useCallback","i","computedIndex","current","toInt","value","Math","abs","_sharedIndex","getCurrentIndex","canSliding","onScrollEnd","onScrollBegin","scrollWithTiming","toValue","callback","easing","easeOutQuart","isFinished","next","currentPage","round","prev","to","idx","animated","offset"],"mappings":"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","sourcesContent":["import React from 'react';\nimport type Animated from 'react-native-reanimated';\nimport { Easing } from '../constants';\nimport { runOnJS, useSharedValue, withTiming } from 'react-native-reanimated';\n\ninterface IOpts {\n    loop: boolean;\n    size: number;\n    handlerOffsetX: Animated.SharedValue<number>;\n    disable?: boolean;\n    duration?: number;\n    originalLength: number;\n    length: number;\n    onScrollBegin?: () => void;\n    onScrollEnd?: () => void;\n    // the length before fill data\n    onChange: (index: number) => void;\n}\n\nexport interface ICarouselController {\n    length: number;\n    index: Animated.SharedValue<number>;\n    sharedIndex: React.MutableRefObject<number>;\n    sharedPreIndex: React.MutableRefObject<number>;\n    prev: () => void;\n    next: () => void;\n    computedIndex: () => void;\n    getCurrentIndex: () => number;\n    to: (index: number, animated?: boolean) => void;\n}\n\nexport function useCarouselController(opts: IOpts): ICarouselController {\n    const {\n        size,\n        loop,\n        handlerOffsetX,\n        disable = false,\n        originalLength,\n        length,\n        onChange,\n        duration,\n    } = opts;\n\n    const index = useSharedValue<number>(0);\n    // The Index displayed to the user\n    const sharedIndex = React.useRef<number>(0);\n    const sharedPreIndex = React.useRef<number>(0);\n\n    const convertToSharedIndex = React.useCallback(\n        (i: number) => {\n            if (loop) {\n                switch (originalLength) {\n                    case 1:\n                        return 0;\n                    case 2:\n                        return i % 2;\n                }\n            }\n            return i;\n        },\n        [originalLength, loop]\n    );\n\n    const computedIndex = React.useCallback(() => {\n        sharedPreIndex.current = sharedIndex.current;\n        const toInt = (handlerOffsetX.value / size) % length;\n        const i =\n            handlerOffsetX.value <= 0\n                ? Math.abs(toInt)\n                : Math.abs(toInt > 0 ? length - toInt : 0);\n        index.value = i;\n        const _sharedIndex = convertToSharedIndex(i);\n        sharedIndex.current = _sharedIndex;\n        onChange(_sharedIndex);\n    }, [\n        length,\n        handlerOffsetX,\n        sharedPreIndex,\n        index,\n        size,\n        sharedIndex,\n        convertToSharedIndex,\n        onChange,\n    ]);\n\n    const getCurrentIndex = React.useCallback(() => {\n        return index.value;\n    }, [index]);\n\n    const canSliding = React.useCallback(() => {\n        return !disable;\n    }, [disable]);\n\n    const onScrollEnd = React.useCallback(() => {\n        opts.onScrollEnd?.();\n    }, [opts]);\n\n    const onScrollBegin = React.useCallback(() => {\n        opts.onScrollBegin?.();\n    }, [opts]);\n\n    const scrollWithTiming = React.useCallback(\n        (toValue: number, callback?: () => void) => {\n            return withTiming(\n                toValue,\n                { duration, easing: Easing.easeOutQuart },\n                (isFinished: boolean) => {\n                    callback?.();\n                    if (isFinished) {\n                        runOnJS(onScrollEnd)();\n                    }\n                }\n            );\n        },\n        [onScrollEnd, duration]\n    );\n\n    const next = React.useCallback(() => {\n        if (!canSliding() || (!loop && index.value === length - 1)) return;\n\n        onScrollBegin?.();\n\n        const currentPage = Math.round(handlerOffsetX.value / size);\n\n        handlerOffsetX.value = scrollWithTiming((currentPage - 1) * size);\n    }, [\n        canSliding,\n        loop,\n        index.value,\n        length,\n        onScrollBegin,\n        handlerOffsetX,\n        size,\n        scrollWithTiming,\n    ]);\n\n    const prev = React.useCallback(() => {\n        if (!canSliding() || (!loop && index.value === 0)) return;\n\n        onScrollBegin?.();\n\n        const currentPage = Math.round(handlerOffsetX.value / size);\n\n        handlerOffsetX.value = scrollWithTiming((currentPage + 1) * size);\n    }, [\n        canSliding,\n        loop,\n        index.value,\n        onScrollBegin,\n        handlerOffsetX,\n        size,\n        scrollWithTiming,\n    ]);\n\n    const to = React.useCallback(\n        (idx: number, animated: boolean = false) => {\n            if (idx === index.value) return;\n            if (!canSliding()) return;\n\n            onScrollBegin?.();\n\n            const offset = handlerOffsetX.value + (index.value - idx) * size;\n\n            if (animated) {\n                handlerOffsetX.value = scrollWithTiming(offset, () => {\n                    index.value = idx;\n                });\n            } else {\n                handlerOffsetX.value = offset;\n                index.value = idx;\n                runOnJS(onScrollEnd)();\n            }\n        },\n        [\n            index,\n            canSliding,\n            onScrollBegin,\n            handlerOffsetX,\n            size,\n            scrollWithTiming,\n            onScrollEnd,\n        ]\n    );\n\n    return {\n        next,\n        prev,\n        to,\n        index,\n        length,\n        sharedIndex,\n        sharedPreIndex,\n        computedIndex,\n        getCurrentIndex,\n    };\n}\n"]}