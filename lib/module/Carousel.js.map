{"version":3,"sources":["Carousel.tsx"],"names":["React","StyleSheet","View","Animated","runOnJS","useDerivedValue","DATA_LENGTH","useAutoPlay","useCarouselController","useCommonVariables","useInitProps","useLayoutConfig","useOnProgressChange","usePropsErrorBoundary","useVisibleRanges","BaseLayout","ScrollViewGesture","CTX","Carousel","_props","ref","props","data","loop","mode","style","width","height","vertical","autoPlay","autoPlayDelay","windowSize","autoPlayReverse","autoPlayInterval","renderItem","onScrollEnd","onSnapToItem","onScrollBegin","onProgressChange","customAnimation","commonVariables","size","handlerOffsetX","offsetX","totalSize","length","x","value","isNaN","carouselController","disable","originalLength","_onScrollEnd","onChange","i","duration","next","prev","sharedPreIndex","sharedIndex","computedIndex","getCurrentIndex","run","pause","scrollViewGestureOnScrollBegin","useCallback","current","scrollViewGestureOnScrollEnd","goToIndex","animated","to","useImperativeHandle","visibleRanges","total","viewSize","translation","layoutConfig","renderLayout","item","realIndex","SINGLE_ITEM","DOUBLE_ITEM","animationValue","index","common","styles","container","itemsVertical","itemsHorizontal","map","forwardRef","create","overflow","flexDirection"],"mappings":"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","sourcesContent":["import React, { PropsWithChildren } from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport Animated, { runOnJS, useDerivedValue } from 'react-native-reanimated';\nimport { DATA_LENGTH } from './constants';\nimport { useAutoPlay } from './hooks/useAutoPlay';\nimport { useCarouselController } from './hooks/useCarouselController';\nimport { useCommonVariables } from './hooks/useCommonVariables';\nimport { useInitProps } from './hooks/useInitProps';\nimport { useLayoutConfig } from './hooks/useLayoutConfig';\nimport { useOnProgressChange } from './hooks/useOnProgressChange';\nimport { usePropsErrorBoundary } from './hooks/usePropsErrorBoundary';\nimport { useVisibleRanges } from './hooks/useVisibleRanges';\nimport { BaseLayout } from './layouts/BaseLayout';\nimport { ScrollViewGesture } from './ScrollViewGesture';\nimport { CTX } from './store';\nimport type { ICarouselInstance, TCarouselProps } from './types';\n\nfunction Carousel<T>(\n    _props: PropsWithChildren<TCarouselProps<T>>,\n    ref: React.Ref<ICarouselInstance>\n) {\n    const props = useInitProps(_props);\n\n    const {\n        data,\n        loop,\n        mode,\n        style,\n        width,\n        height,\n        vertical,\n        autoPlay,\n        autoPlayDelay = 5000,\n        windowSize,\n        autoPlayReverse,\n        autoPlayInterval,\n        renderItem,\n        onScrollEnd,\n        onSnapToItem,\n        onScrollBegin,\n        onProgressChange,\n        customAnimation,\n    } = props;\n\n    const commonVariables = useCommonVariables(props);\n    const { size, handlerOffsetX } = commonVariables;\n\n    const offsetX = useDerivedValue(() => {\n        const totalSize = size * data.length;\n        const x = handlerOffsetX.value % totalSize;\n\n        if (!loop) {\n            return handlerOffsetX.value;\n        }\n        return isNaN(x) ? 0 : x;\n    }, [loop, size, data]);\n\n    usePropsErrorBoundary(props);\n    useOnProgressChange({ size, offsetX, data, onProgressChange });\n\n    const carouselController = useCarouselController({\n        loop,\n        size,\n        handlerOffsetX,\n        length: data.length,\n        disable: !data.length,\n        originalLength: data.length,\n        onScrollEnd: () => runOnJS(_onScrollEnd)(),\n        onScrollBegin: () => !!onScrollBegin && runOnJS(onScrollBegin)(),\n        onChange: (i) => onSnapToItem && runOnJS(onSnapToItem)(i),\n        duration: autoPlayInterval,\n    });\n\n    const {\n        next,\n        prev,\n        sharedPreIndex,\n        sharedIndex,\n        computedIndex,\n        getCurrentIndex,\n    } = carouselController;\n\n    const { run, pause } = useAutoPlay({\n        autoPlay,\n        autoPlayInterval,\n        autoPlayReverse,\n        carouselController,\n        autoPlayDelay,\n    });\n\n    const scrollViewGestureOnScrollBegin = React.useCallback(() => {\n        pause();\n        onScrollBegin?.();\n    }, [onScrollBegin, pause]);\n\n    const _onScrollEnd = React.useCallback(() => {\n        computedIndex();\n        onScrollEnd?.(sharedPreIndex.current, sharedIndex.current);\n    }, [sharedPreIndex, sharedIndex, computedIndex, onScrollEnd]);\n\n    const scrollViewGestureOnScrollEnd = React.useCallback(() => {\n        run();\n        _onScrollEnd();\n    }, [_onScrollEnd, run]);\n\n    const goToIndex = React.useCallback(\n        (i: number, animated?: boolean) => {\n            carouselController.to(i, animated);\n        },\n        [carouselController]\n    );\n\n    React.useImperativeHandle(\n        ref,\n        () => ({\n            next,\n            prev,\n            getCurrentIndex,\n            goToIndex,\n        }),\n        [getCurrentIndex, goToIndex, next, prev]\n    );\n\n    const visibleRanges = useVisibleRanges({\n        total: data.length,\n        viewSize: size,\n        translation: handlerOffsetX,\n        windowSize,\n    });\n\n    const layoutConfig = useLayoutConfig<T>({ ...props, size });\n\n    const renderLayout = React.useCallback(\n        (item: T, i: number) => {\n            let realIndex = i;\n            if (data.length === DATA_LENGTH.SINGLE_ITEM) {\n                realIndex = i % 1;\n            }\n\n            if (data.length === DATA_LENGTH.DOUBLE_ITEM) {\n                realIndex = i % 2;\n            }\n\n            return (\n                <BaseLayout\n                    key={i}\n                    index={i}\n                    handlerOffsetX={offsetX}\n                    visibleRanges={visibleRanges}\n                    animationStyle={customAnimation || layoutConfig}\n                >\n                    {({ animationValue }) =>\n                        renderItem({\n                            item,\n                            index: realIndex,\n                            animationValue,\n                        })\n                    }\n                </BaseLayout>\n            );\n        },\n        [\n            data,\n            offsetX,\n            visibleRanges,\n            renderItem,\n            layoutConfig,\n            customAnimation,\n        ]\n    );\n\n    return (\n        <CTX.Provider value={{ props, common: commonVariables }}>\n            <View\n                style={[\n                    styles.container,\n                    { width: width || '100%', height: height || '100%' },\n                    style,\n                ]}\n            >\n                <ScrollViewGesture\n                    size={size}\n                    translation={handlerOffsetX}\n                    onScrollBegin={scrollViewGestureOnScrollBegin}\n                    onScrollEnd={scrollViewGestureOnScrollEnd}\n                >\n                    <Animated.View\n                        key={mode}\n                        style={[\n                            styles.container,\n                            {\n                                width: width || '100%',\n                                height: height || '100%',\n                            },\n                            style,\n                            vertical\n                                ? styles.itemsVertical\n                                : styles.itemsHorizontal,\n                        ]}\n                    >\n                        {data.map(renderLayout)}\n                    </Animated.View>\n                </ScrollViewGesture>\n            </View>\n        </CTX.Provider>\n    );\n}\n\nexport default React.forwardRef(Carousel) as typeof Carousel;\n\nconst styles = StyleSheet.create({\n    container: {\n        overflow: 'hidden',\n    },\n    itemsHorizontal: {\n        flexDirection: 'row',\n    },\n    itemsVertical: {\n        flexDirection: 'column',\n    },\n});\n"]}